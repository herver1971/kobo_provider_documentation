kobo_provider.hooks.kobotoolbox
===============================

.. py:module:: kobo_provider.hooks.kobotoolbox


Classes
-------

.. autoapisummary::

   kobo_provider.hooks.kobotoolbox.KoboHook


Module Contents
---------------

.. py:class:: KoboHook(kobo_conn_id: str, source=None)

   Bases: :py:obj:`airflow.hooks.base.BaseHook`


   Interact with KoboToolBox.
   Methods list:

       * get_form_ids: Allows to obtain the formid and the id_string of a form providing his formid or his id_string.
       * get_form_metadata: Gets the metadata of a form.
       * get_form_columns: Gets form columns.
       * get_form_submission: Gets the submissions or responses for a form.


   .. py:attribute:: conn_name_attr
      :value: 'kobo_conn_id'



   .. py:attribute:: default_conn_name
      :value: 'kobo_default'



   .. py:attribute:: conn_type
      :value: 'kobotoolbox'



   .. py:attribute:: hook_name
      :value: 'KoboToolBox'



   .. py:attribute:: conn


   .. py:attribute:: base_url


   .. py:attribute:: kc_base_url


   .. py:attribute:: token


   .. py:method:: test_connection()


   .. py:method:: get_form_ids(formid: int = None, id_string: str = None) -> int

      This method allows to get a formid and id_string for a form, providing his formid or his id_string.

      :param formid: formid of a form.
      :type formid: int
      :param id_string: id_string of a form.
      :type id_string: str

      :returns: This method returns the formid and the id_string for a form.



   .. py:method:: get_form_metadata(formid: int) -> dict

      Retrieve metadata of a specific form.

      :param formid: Form ID to be fetched
      :type formid: int

      :returns: A JSON object (or python dict) with the form metadata.



   .. py:method:: get_form_columns(id_string: str) -> dict

      This method gets all columns for a specific form

      :param id_string: id_string of a form.
      :type id_string: str

      :returns: A JSON object (or python dict) with the form columns and their types.



   .. py:method:: get_form_submission(formid: int, last_id: int = None) -> dict

      Retrieve submission of a specific form.
      You can specify "last_id" param that allows you to filter the sumbits with "_id" greater than the "last_id" specified

      :param formid: Form ID to be fetched
      :type formid: int

      :param last_id: Optional. filter the sumbits with "_id" greater than the "last_id" specified
      :type last_id: int

      :returns: A JSON object (or python dict) with the form submissions.



   .. py:method:: get_ui_field_behaviour() -> Dict
      :staticmethod:



